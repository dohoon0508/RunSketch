{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://your-api-domain.com' : 'http://localhost:8001';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const generateLoopRoute = async request => {\n  try {\n    const response = await api.post('/api/loop', request);\n    return response.data;\n  } catch (error) {\n    console.error('API 호출 오류:', error);\n    throw error;\n  }\n};\nexport const downloadGPX = (gpxBase64, filename = 'running-route.gpx') => {\n  try {\n    const binaryString = atob(gpxBase64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    const blob = new Blob([bytes], {\n      type: 'application/gpx+xml'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  } catch (error) {\n    console.error('GPX 다운로드 오류:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","timeout","headers","generateLoopRoute","request","response","post","data","error","console","downloadGPX","gpxBase64","filename","binaryString","atob","bytes","Uint8Array","length","i","charCodeAt","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["/Users/PC/Desktop/run/frontend/src/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoopRequest, LoopResponse } from './types';\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://your-api-domain.com' \n  : 'http://localhost:8001';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const generateLoopRoute = async (request: LoopRequest): Promise<LoopResponse> => {\n  try {\n    const response = await api.post('/api/loop', request);\n    return response.data;\n  } catch (error) {\n    console.error('API 호출 오류:', error);\n    throw error;\n  }\n};\n\nexport const downloadGPX = (gpxBase64: string, filename: string = 'running-route.gpx') => {\n  try {\n    const binaryString = atob(gpxBase64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    \n    const blob = new Blob([bytes], { type: 'application/gpx+xml' });\n    const url = URL.createObjectURL(blob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  } catch (error) {\n    console.error('GPX 다운로드 오류:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GACtD,6BAA6B,GAC7B,uBAAuB;AAE3B,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,OAAoB,IAA4B;EACtF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,WAAW,EAAEF,OAAO,CAAC;IACrD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IAClC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAACC,SAAiB,EAAEC,QAAgB,GAAG,mBAAmB,KAAK;EACxF,IAAI;IACF,MAAMC,YAAY,GAAGC,IAAI,CAACH,SAAS,CAAC;IACpC,MAAMI,KAAK,GAAG,IAAIC,UAAU,CAACH,YAAY,CAACI,MAAM,CAAC;IACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC5CH,KAAK,CAACG,CAAC,CAAC,GAAGL,YAAY,CAACM,UAAU,CAACD,CAAC,CAAC;IACvC;IAEA,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACN,KAAK,CAAC,EAAE;MAAEO,IAAI,EAAE;IAAsB,CAAC,CAAC;IAC/D,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IAErC,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,QAAQ,GAAGlB,QAAQ;IACxBe,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;IAC/BF,GAAG,CAACW,eAAe,CAACZ,GAAG,CAAC;EAC1B,CAAC,CAAC,OAAOf,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}