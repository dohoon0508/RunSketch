{"ast":null,"code":"var _jsxFileName = \"/Users/PC/Desktop/run/frontend/src/components/MapComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  center,\n  route,\n  waypoints = [],\n  onMapClick,\n  height = '500px'\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [polylines, setPolylines] = useState([]);\n\n  // 카카오맵 초기화\n  useEffect(() => {\n    if (!window.kakao || !mapRef.current) return;\n    const options = {\n      center: new window.kakao.maps.LatLng(center.lat, center.lon),\n      level: 3\n    };\n    const kakaoMap = new window.kakao.maps.Map(mapRef.current, options);\n    setMap(kakaoMap);\n\n    // 지도 클릭 이벤트\n    if (onMapClick) {\n      window.kakao.maps.event.addListener(kakaoMap, 'click', mouseEvent => {\n        const latlng = mouseEvent.latLng;\n        onMapClick({\n          lat: latlng.getLat(),\n          lon: latlng.getLng()\n        });\n      });\n    }\n  }, [center, onMapClick]);\n\n  // 경로 표시\n  useEffect(() => {\n    if (!map || !route) return;\n\n    // 기존 폴리라인 제거\n    polylines.forEach(polyline => polyline.setMap(null));\n    setPolylines([]);\n\n    // GeoJSON에서 좌표 추출\n    if (route.features && route.features.length > 0) {\n      const coordinates = route.features[0].geometry.coordinates;\n\n      // 카카오맵 좌표로 변환\n      const path = coordinates.map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]));\n\n      // 폴리라인 생성\n      const polyline = new window.kakao.maps.Polyline({\n        path: path,\n        strokeWeight: 5,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeStyle: 'solid'\n      });\n      polyline.setMap(map);\n      setPolylines([polyline]);\n\n      // 경로에 맞춰 지도 범위 조정\n      const bounds = new window.kakao.maps.LatLngBounds();\n      path.forEach(point => bounds.extend(point));\n      map.setBounds(bounds);\n    }\n  }, [map, route]);\n\n  // 경유지 마커 표시\n  useEffect(() => {\n    if (!map || waypoints.length === 0) return;\n\n    // 기존 마커 제거\n    markers.forEach(marker => marker.setMap(null));\n    setMarkers([]);\n    const newMarkers = [];\n    waypoints.forEach((waypoint, index) => {\n      const marker = new window.kakao.maps.Marker({\n        position: new window.kakao.maps.LatLng(waypoint.lat, waypoint.lon),\n        title: `경유지 ${index + 1}`\n      });\n\n      // 마커 클릭 시 정보창 표시\n      const infowindow = new window.kakao.maps.InfoWindow({\n        content: `<div style=\"padding: 5px;\">경유지 ${index + 1}</div>`\n      });\n      window.kakao.maps.event.addListener(marker, 'click', () => {\n        infowindow.open(map, marker);\n      });\n      marker.setMap(map);\n      newMarkers.push(marker);\n    });\n    setMarkers(newMarkers);\n  }, [map, waypoints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: '100%',\n      height: height,\n      borderRadius: '8px',\n      overflow: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"LaRhFmP5jGw43WME37bM9M+tcA8=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","MapComponent","center","route","waypoints","onMapClick","height","_s","mapRef","map","setMap","markers","setMarkers","polylines","setPolylines","window","kakao","current","options","maps","LatLng","lat","lon","level","kakaoMap","Map","event","addListener","mouseEvent","latlng","latLng","getLat","getLng","forEach","polyline","features","length","coordinates","geometry","path","coord","Polyline","strokeWeight","strokeColor","strokeOpacity","strokeStyle","bounds","LatLngBounds","point","extend","setBounds","marker","newMarkers","waypoint","index","Marker","position","title","infowindow","InfoWindow","content","open","push","ref","style","width","borderRadius","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/PC/Desktop/run/frontend/src/components/MapComponent.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Coordinate } from '../types';\n\ndeclare global {\n  interface Window {\n    kakao: any;\n  }\n}\n\ninterface MapComponentProps {\n  center: Coordinate;\n  route?: any; // GeoJSON\n  waypoints?: Coordinate[];\n  onMapClick?: (coordinate: Coordinate) => void;\n  height?: string;\n}\n\nconst MapComponent: React.FC<MapComponentProps> = ({\n  center,\n  route,\n  waypoints = [],\n  onMapClick,\n  height = '500px'\n}) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any>(null);\n  const [markers, setMarkers] = useState<any[]>([]);\n  const [polylines, setPolylines] = useState<any[]>([]);\n\n  // 카카오맵 초기화\n  useEffect(() => {\n    if (!window.kakao || !mapRef.current) return;\n\n    const options = {\n      center: new window.kakao.maps.LatLng(center.lat, center.lon),\n      level: 3\n    };\n\n    const kakaoMap = new window.kakao.maps.Map(mapRef.current, options);\n    setMap(kakaoMap);\n\n    // 지도 클릭 이벤트\n    if (onMapClick) {\n      window.kakao.maps.event.addListener(kakaoMap, 'click', (mouseEvent: any) => {\n        const latlng = mouseEvent.latLng;\n        onMapClick({\n          lat: latlng.getLat(),\n          lon: latlng.getLng()\n        });\n      });\n    }\n  }, [center, onMapClick]);\n\n  // 경로 표시\n  useEffect(() => {\n    if (!map || !route) return;\n\n    // 기존 폴리라인 제거\n    polylines.forEach(polyline => polyline.setMap(null));\n    setPolylines([]);\n\n    // GeoJSON에서 좌표 추출\n    if (route.features && route.features.length > 0) {\n      const coordinates = route.features[0].geometry.coordinates;\n      \n      // 카카오맵 좌표로 변환\n      const path = coordinates.map((coord: [number, number]) => \n        new window.kakao.maps.LatLng(coord[1], coord[0])\n      );\n\n      // 폴리라인 생성\n      const polyline = new window.kakao.maps.Polyline({\n        path: path,\n        strokeWeight: 5,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeStyle: 'solid'\n      });\n\n      polyline.setMap(map);\n      setPolylines([polyline]);\n\n      // 경로에 맞춰 지도 범위 조정\n      const bounds = new window.kakao.maps.LatLngBounds();\n      path.forEach((point: any) => bounds.extend(point));\n      map.setBounds(bounds);\n    }\n  }, [map, route]);\n\n  // 경유지 마커 표시\n  useEffect(() => {\n    if (!map || waypoints.length === 0) return;\n\n    // 기존 마커 제거\n    markers.forEach(marker => marker.setMap(null));\n    setMarkers([]);\n\n    const newMarkers: any[] = [];\n\n    waypoints.forEach((waypoint, index) => {\n      const marker = new window.kakao.maps.Marker({\n        position: new window.kakao.maps.LatLng(waypoint.lat, waypoint.lon),\n        title: `경유지 ${index + 1}`\n      });\n\n      // 마커 클릭 시 정보창 표시\n      const infowindow = new window.kakao.maps.InfoWindow({\n        content: `<div style=\"padding: 5px;\">경유지 ${index + 1}</div>`\n      });\n\n      window.kakao.maps.event.addListener(marker, 'click', () => {\n        infowindow.open(map, marker);\n      });\n\n      marker.setMap(map);\n      newMarkers.push(marker);\n    });\n\n    setMarkers(newMarkers);\n  }, [map, waypoints]);\n\n  return (\n    <div \n      ref={mapRef} \n      style={{ \n        width: '100%', \n        height: height,\n        borderRadius: '8px',\n        overflow: 'hidden'\n      }}\n    />\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}